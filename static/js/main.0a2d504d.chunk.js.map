{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweets.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","console","log","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","update","toggleEditing","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onload","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","document","querySelector","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0a2d504d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sing In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sing In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit yout nweet\"\r\n                  value={newNweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    const imgInput = document.querySelector(\"input[type=file]\");\r\n    imgInput.value = null;\r\n    setAttachment(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Nweet from \"components/Nweets\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createAt\")\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      {isLoggedIn ? (\r\n        <div\r\n          style={{\r\n            maxWidth: 890,\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            marginTop: 80,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\"></Redirect>\r\n          </Switch>\r\n        </div>\r\n      ) : (\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n          <Redirect from=\"*\" to=\"/\"></Redirect>\r\n        </Switch>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}